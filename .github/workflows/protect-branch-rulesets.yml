name: Add branch protection ruleset

on:
  push:
    paths:
      - ".github/repo-protection-ruleset.json"
      - ".github/workflows/protect-branch-rulesets.yml"
  workflow_dispatch:
jobs:
  create-branch-ruleset:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get DevOps Team ID
        id: fetch_bypass_team_id
        env:
          ACCESS_TOKEN: ${{ secrets.BLUE_ENERGY_TOKEN }}
          ORG_NAME: "EDBlueEnergy"
        run: |
          API_URL="https://api.github.com/orgs/$ORG_NAME/teams/devops"
          response=$(curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: token $ACCESS_TOKEN" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          $API_URL
          )
          team_id=$(echo "$response" | jq -r '.id')

          echo "TEAM_ID=$team_id" >> $GITHUB_ENV

      - name: Add ruleset
        env:
          ACCESS_TOKEN: ${{ secrets.BLUE_ENERGY_TOKEN }}
          CONFIG_PATH: ".github/repo-protection-ruleset.json"
          ORG_NAME: "EDBlueEnergy"
          TEAM_ID: ${{env.TEAM_ID}}
        run: |
          # Get ruleset json
          RULESET=$(cat $CONFIG_PATH)
          RULESET_NAME=$(echo "$RULESET" | jq -r '.name')

          # Add bypass team
          UPDATED_RULESET=$(echo "$RULESET" | jq --argjson team_id "$TEAM_ID" '. + {"bypass_actors":[{"actor_id":$team_id,"actor_type":"Team","bypass_mode":"always"}]}')

          REPO_NAME="ruleset-test"

          # Check create or update ruleset
          REPO_RULESET_LIST=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token $ACCESS_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/$ORG_NAME/$REPO_NAME/rulesets"
          )
          echo $REPO_RULESET_LIST
          # RULESET_ID=$(echo "$REPO_RULESET_LIST" | jq -r --arg ruleset_name "$RULESET_NAME" '.[] | select(.name == $ruleset_name) | .id')

          # if [ -z "$RULESET_ID" ]; then
          #   # API to create ruleset
          #   REPO_URL="https://api.github.com/repos/$ORG_NAME/$REPO_NAME/rulesets"
          #   HTTP_METHOD="POST"
          # else
          #   # API to update ruleset
          #   REPO_URL="https://api.github.com/repos/$ORG_NAME/$REPO_NAME/rulesets/$RULESET_ID"
          #   HTTP_METHOD="PUT"

          # # Apply protection rules
          # curl -L \
          #   -X $HTTP_METHOD \
          #   -H "Accept: application/vnd.github+json" \
          #   -H "Authorization: token $ACCESS_TOKEN" \
          #   -H "X-GitHub-Api-Version: 2022-11-28" \
          #   -d "$UPDATED_RULESET" \
          #   "$REPO_URL"
